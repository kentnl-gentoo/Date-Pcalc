                     =====================================
                       Package "Date::Pcalc" Version 1.2
                     =====================================

                  Copyright (c) 1999-2001 J. David Eisenberg,
                                 based on work
                   Copyright (c) 1993-2001 by Steffen Beyer.
                             All rights reserved.


Contents:
---------

    +   Prerequisites
    +   Preliminary steps for use with Perl prior to version 5.002
    +   Preliminary steps for use with ActivePerl
    +   Preliminary steps for console users
    +   How to install additional languages
    +   Installation


Prerequisites:
--------------

Perl version 5.000 or higher.

For Windows (95/98/NT/2000) it is recommended that you make sure
that the ".pl" extension is associated with Perl.


Preliminary steps for use with Perl prior to version 5.002:
-----------------------------------------------------------

Edit the file "Makefile.PL" and change the line

    'VERSION_FROM'      => 'Pcalc.pm',
to
    'VERSION'           => '1.2',

Also edit the file "t/f000.t" and change the line

    use Date::Pcalc 1.2;
to
    use Date::Pcalc;


Preliminary steps for use with ActivePerl:
------------------------------------------

(I.e., for the Win32 platform)

Edit the file "Makefile.PL" and remove all of the "#" characters
which currently comment out the attributes "ABSTRACT", "AUTHOR"
and "CAPI".


Preliminary steps for console users:
------------------------------------

In case you will be running this package in a MS-DOS command shell
environment *EXCLUSIVELY* (and never under Perl/Tk, for instance),
or if you will be running this package *EXCLUSIVELY* on the console
of a PC UNIX system (like FreeBSD or GNU/Linux, for example) and
never under X-windows, you might want to convert the special characters
embedded in this package from the "ISO-Latin-1" character set (this
is the same as "ISO-8859-1") to the character set used by the MS-DOS
command shell or the PC UNIX console.

To do so, simply change directory to the "tools" subdirectory and
issue the following command:

    > perl convert.pl

You can also use

    > ./convert.sh

under UNIX; you may have to edit the first line of the files "convert.sh"
and "iso2pc.pl" to make sure that they point to the correct location
of Perl on your system, though.

Under Windows, you can use

    > convert.bat

Then proceed with the installation of this package as described in
the section "Installation" further below.


How to install additional languages:
------------------------------------

Unfortunately, Unix and Windows lack a "Resource Fork" concept
as provided by the MacOS (Apple Macintosh Operating System).

Therefore, each time you want to add more languages, you will
have to either edit the installed module (the exact location
is sometimes a little hard to find, unless you use a file search
utility and look for "Pcalc.pm"), or this package, in which case
you'll need to re-build and re-install it using "make" (or "dmake"
or "nmake", under Windows), preferably, or by hand (if you know
what you're doing).

Fortunately, though, adding a new language is quite simple:

Edit the file "Pcalc.pm" and do the following:

1) Increment the number in the line

    $pcalc_Languages = 7;

   as necessary.

2) Add a new entry to the bottom of the array "@arr_Month_to_Text"
   of the following form:

    [
        "???", "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ]

   Don't forget to add a comma after the closing bracket of the immediately
   preceding entry above.

3) Add a new entry to the bottom of the array "@arr_Day_of_Week_to_Text"
   of the following form:

    [
        "???", "Monday", "Tuesday", "Wednesday",
        "Thursday", "Friday", "Saturday", "Sunday"
    ]

   Don't forget to add a comma after the closing bracket of the immediately
   preceding entry above.

4) Add a new entry to the bottom of the array
   "@arr_Day_of_Week_Abbreviation" of the following form:

    [
        "", "", "", "", "", "", "", ""    # 8
    ]

   Don't forget to add a comma after the closing bracket of the immediately
   preceding entry above.

   Fill this entry with values *ONLY* if you need special abbreviations
   for the names of the days of week (i.e., if you need abbreviations
   other than the first three letters of the entries in the array
   "@arr_Day_of_Week_to_Text_" immediately above)!

   If you do so, remember to fill the first (dummy) field in this entry
   with some non-empty string (such as "???", for example), since this
   field is used to flag the existence of special abbreviations in this
   package.

5) Finally, append the name of the language you have just added
   *WRITTEN IN THAT VERY LANGUAGE*, to the end of the array
   "@arr_Language_to_Text".

   The name of the language should be written in that very language
   itself because the name for any given language usually varies
   considerably from language to language. The only way to uniquely
   identify any language is to use the way it is written by native
   writers of that language itself.

   The abbreviations for names of languages as defined by ISO 639 cannot
   take account of all languages (there are only 26 * 26 = 676 possible
   abbreviations as designated by this standard, as opposed to the many
   thousand different languages in this world), which is the reason why
   they are not used here.

6) If you have never built this version of this package on the current
   machine before, just proceed with the instructions in the section
   "Installation" following immediately below.

   Otherwise, rebuild the package with "make" (as described in the
   section below) and re-install it with "make install".

   If you want to start over from scratch instead, enter the command
   "make realclean" and proceed as described in the section below,
   from the beginning.


Installation:
-------------

=============================================================================
ALWAYS unpack and build Perl modules OUTSIDE the Perl source and installation
tree! (You might otherwise inadvertently corrupt your Perl installation!)
=============================================================================

Note that installation under Windows is easiest with ActivePerl, available
from http://www.ActiveState.com/.

Quick installation guide for experienced users:
-----------------------------------------------

    UNIX:                 Win32/Borland C++:      Win32/MS Visual C++:
    =====                 ==================      ====================

    > perl Makefile.PL    > perl Makefile.PL      > perl Makefile.PL
    > make                > dmake                 > nmake
    > make test           > dmake test            > nmake test
    > make install        > dmake install         > nmake install

Detailed installation guide:
----------------------------

 1) Change directory to the directory that has been created by unpacking this
    package ("cd Date-Pcalc-1.2").

 2) Type "perl Makefile.PL" (or whatever the name and path of your Perl 5
    binary is).

    This will create a "Makefile" with the appropriate parameters for your
    system (for instance, where the install directories are, and so on).

 3) Type "make".

    (For installation under Windows, use "dmake" (Borland C++) or
    "nmake" (MS Visual C++) instead!)

 4) Now issue "make test" (or "dmake test" or "nmake test", respectively).

    The output should look somewhat like this:

    PERL_DL_NONLAZY=1 /usr/sw/bin/perl
    -I./blib/arch
    -I./blib/lib
    -I/usr/sw/pkg/perl/lib/5.00503/i386-freebsd
    -I/usr/sw/pkg/perl/lib/5.00503
    -e 'use Test::Harness qw(&runtests $verbose); $verbose=0;
    runtests @ARGV;' t/*.t
    t/f000..............ok
    t/f001..............ok
    t/f002..............ok
    t/f003..............ok
    t/f004..............ok
    t/f005..............ok
    t/f006..............ok
    t/f007..............ok
    t/f008..............ok
    t/f009..............ok
    t/f010..............ok
    t/f011..............ok
    t/f012..............ok
    t/f013..............ok
    t/f014..............ok
    t/f015..............ok
    t/f016..............ok
    t/f017..............ok
    t/f018..............ok
    t/f019..............ok
    t/f020..............ok
    t/f021..............ok
    t/f022..............ok
    t/f023..............ok
    t/f024..............ok
    t/f025..............ok
    t/f026..............ok
    t/f027..............ok
    t/f028..............ok
    t/f029..............ok
    t/f030..............ok
    t/f031..............ok
    t/f032..............ok
    t/f033..............ok
    All tests successful.
    Files=34,  Tests=1836, 12 wallclock secs
    ( 8.82 cusr +  1.23 csys = 10.05 CPU)

 5) At last, type "make install" (or "dmake install", "nmake install").

 6) Now you can run the example applications from the "examples"
    subdirectory in this distribution.

    Please refer to the file "EXAMPLES.txt" in this distribution for
    more details!

 7) Share and enjoy!


